version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: peve-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: your_strong_password_here
      MONGO_INITDB_DATABASE: peve_prod
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - peve-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: peve-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGO_URI: mongodb://admin:your_strong_password_here@mongodb:27017/peve_prod?authSource=admin
      JWT_SECRET: your_super_strong_jwt_secret_here_minimum_32_characters
      JWT_REFRESH_SECRET: your_super_strong_refresh_secret_here_minimum_32_characters
      JWT_EXPIRES_IN: 15m
      REFRESH_TOKEN_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      CLOUDINARY_CLOUD_NAME: your_cloudinary_cloud_name
      CLOUDINARY_API_KEY: your_cloudinary_api_key
      CLOUDINARY_API_SECRET: your_cloudinary_api_secret
      CORS_ORIGINS: http://localhost:3000
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
    networks:
      - peve-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:4000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (for local testing)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: peve-frontend-prod
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:4000
      VITE_APP_NAME: peve
      VITE_APP_VERSION: 1.0.0
      VITE_CLOUDINARY_CLOUD_NAME: your_cloudinary_cloud_name
      VITE_SOCKET_URL: http://localhost:4000
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - peve-network

volumes:
  mongodb_data:
    driver: local

networks:
  peve-network:
    driver: bridge
